# Generated by Django 5.2 on 2025-07-14 16:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du Département')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de Dernière Mise à Jour')),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Titre du Poste')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de Dernière Mise à Jour')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='positions', to='employee.department', verbose_name='Département Associé')),
            ],
            options={
                'verbose_name': 'Poste',
                'verbose_name_plural': 'Postes',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse E-mail de Connexion')),
                ('employee_id', models.CharField(blank=True, help_text="Numéro d'identification unique de l'employé à la SNEL (généré automatiquement).", max_length=50, unique=True, verbose_name='Numéro Matricule')),
                ('is_hr', models.BooleanField(default=False, help_text="Indique si l'utilisateur a des privilèges du département des ressources humaines.", verbose_name='Est RH')),
                ('is_manager', models.BooleanField(default=False, help_text="Indique si l'utilisateur est un manager avec une équipe à gérer.", verbose_name='Est Manager')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date de Naissance')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin'), ('O', 'Autre')], max_length=1, null=True, verbose_name='Genre')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de Téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse Résidentielle')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='media/employee_pics/', verbose_name='Photo de Profil')),
                ('hire_date', models.DateField(null=True, verbose_name="Date d'Embauche")),
                ('contract_type', models.CharField(choices=[('CDI', 'Contrat à Durée Indéterminée'), ('CDD', 'Contrat à Durée Déterminée'), ('INT', 'Intérim'), ('STA', 'Stage'), ('AUT', 'Autre')], default='CDI', max_length=3, verbose_name='Type de Contrat')),
                ('employee_status', models.CharField(choices=[('ACT', 'Actif'), ('CON', 'En Congé'), ('SUS', 'Suspendu'), ('RES', 'Démissionnaire'), ('LIC', 'Licencié'), ('RET', 'Retraité')], default='ACT', max_length=3, verbose_name="Statut de l'Employé")),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salaire Mensuel Brut')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name="Contact d'Urgence (Nom)")),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name="Contact d'Urgence (Téléphone)")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création Fiche')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Dernière Maj Fiche')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_employees', to=settings.AUTH_USER_MODEL, verbose_name='Manager Direct')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_employees', to='employee.department', verbose_name='Département')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='position_employees', to='employee.position', verbose_name='Poste')),
            ],
            options={
                'verbose_name': 'Employé SNEL',
                'verbose_name_plural': 'Employés SNEL',
                'ordering': ['last_name', 'first_name'],
            },
        ),
    ]
