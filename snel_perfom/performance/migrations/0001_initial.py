# Generated by Django 5.2 on 2025-07-14 16:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom de la Métrique')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('unit', models.CharField(blank=True, help_text='Unité de mesure (e.g., %, Jours, Nombre, Échelle de Likert)', max_length=50, null=True, verbose_name='Unité')),
                ('is_quantitative', models.BooleanField(default=True, help_text='Cochez si la métrique est mesurable par un nombre.', verbose_name='Est Quantitative')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de Dernière Mise à Jour')),
            ],
            options={
                'verbose_name': 'Métrique de Performance',
                'verbose_name_plural': 'Métrique de Performance',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'Objectif")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description Détaillée')),
                ('start_date', models.DateField(verbose_name='Date de Début')),
                ('end_date', models.DateField(verbose_name='Date de Fin Cible')),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Non Démarré'), ('IN_PROGRESS', 'En Cours'), ('COMPLETED', 'Complété'), ('OVERDUE', 'En Retard'), ('CANCELED', 'Annulé')], default='NOT_STARTED', max_length=20, verbose_name="Statut de l'Objectif")),
                ('target_value', models.FloatField(blank=True, null=True, verbose_name='Valeur Cible')),
                ('current_value', models.FloatField(blank=True, null=True, verbose_name='Valeur Actuelle')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de Dernière Mise à Jour')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to=settings.AUTH_USER_MODEL, verbose_name='Employé Cible')),
                ('set_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals_set', to=settings.AUTH_USER_MODEL, verbose_name='Défini par')),
                ('metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals', to='performance.performancemetric', verbose_name='Métrique Associée')),
            ],
            options={
                'verbose_name': 'Objectif',
                'verbose_name_plural': 'Objectifs',
                'ordering': ['-end_date', 'employee__last_name'],
                'unique_together': {('employee', 'title', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('POSITIVE', 'Positif'), ('CONSTRUCTIVE', 'Constructif'), ('360', "360 Degrés (issu d'une campagne formelle)")], max_length=20, verbose_name='Type de Feedback')),
                ('content', models.TextField(verbose_name='Contenu du Feedback')),
                ('date_given', models.DateTimeField(auto_now_add=True, verbose_name='Date du Feedback')),
                ('giver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_given', to=settings.AUTH_USER_MODEL, verbose_name='Donné par')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_received', to=settings.AUTH_USER_MODEL, verbose_name='Reçu par')),
                ('related_goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_entries', to='performance.goal', verbose_name='Objectif Lié')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-date_given'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(verbose_name="Date de l'Évaluation")),
                ('overall_score', models.IntegerField(choices=[(1, 'Insuffisant (Ne répond pas aux attentes)'), (2, 'À Améliorer (Répond parfois aux attentes)'), (3, 'Satisfaisant (Répond aux attentes)'), (4, 'Bon (Dépasse les attentes)'), (5, 'Excellent (Dépasse largement les attentes)')], verbose_name='Score Global')),
                ('comments', models.TextField(verbose_name='Commentaires Généraux')),
                ('next_steps', models.TextField(blank=True, null=True, verbose_name='Prochaines Étapes et Plan de Développement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de Création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de Dernière Mise à Jour')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Employé Évalué')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews_conducted', to=settings.AUTH_USER_MODEL, verbose_name='Évaluateur')),
            ],
            options={
                'verbose_name': 'Évaluation de Performance',
                'verbose_name_plural': 'Évaluations de Performance',
                'ordering': ['-review_date', 'employee__last_name'],
                'unique_together': {('employee', 'review_date')},
            },
        ),
    ]
